y = cor(ailo[,c(2,3)])
asd=rbind(asd,y[2])
}
}
colnames(asd)= c("correlation")
return(asd)
}
cr=corr("specdata",400)
summary(cr)
cr=corr("specdata",5000)
summary(cr)
corr <- function(directory, threshold=0) {
id = 1:332
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
colnames(ak)=(c("id","nobs"))
asd<-data.frame()
kk=((split(a,a$ID))
)
for(i in 1:nrow(ak)){
ailo=data.frame(kk[i])
if((ak[i,2])>threshold ){
y = cor(ailo[,c(2,3)])
asd=rbind(asd,y[2])
}
}
colnames(asd)= c("correlation")
if(nrow(asd)==0){
return(c(0))
}
return(asd)
}
cr=corr("specdata",5000)
corr <- function(directory, threshold=0) {
id = 1:332
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
colnames(ak)=(c("id","nobs"))
asd<-data.frame()
kk=((split(a,a$ID))
)
for(i in 1:nrow(ak)){
ailo=data.frame(kk[i])
if((ak[i,2])>threshold ){
y = cor(ailo[,c(2,3)])
asd=rbind(asd,y[2])
}
}
colnames(asd)= c("correlation")
a=nrow(asd)
if(a==0){
return(c(0))
}
return(asd)
}
cr=corr("specdata",5000)
corr <- function(directory, threshold=0) {
id = 1:332
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
colnames(ak)=(c("id","nobs"))
asd<-data.frame()
kk=((split(a,a$ID))
)
for(i in 1:nrow(ak)){
ailo=data.frame(kk[i])
if((ak[i,2])>threshold ){
y = cor(ailo[,c(2,3)])
asd=rbind(asd,y[2])
}
}
a=nrow(asd)
if(a==0){
return(c(0))
}
colnames(asd)= c("correlation")
return(asd)
}
cr=corr("specdata",5000)
cr
summary(cr)
pollutantmean <- function(directory,pollutant, id=1:332 ) {
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
mean(Data[,pollutant],na.rm=TRUE)
}
pollutantmean("specdata","nitrate",1:20)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
submit
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
corr <- function(directory, threshold=0) {
id = 1:332
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
colnames(ak)=(c("id","nobs"))
asd<-data.frame()
kk=((split(a,a$ID))
)
for(i in 1:nrow(ak)){
ailo=data.frame(kk[i])
if((ak[i,2])>threshold ){
y = cor(ailo[,c(2,3)])
asd=rbind(asd,y[2])
}
}
a=nrow(asd)
if(a==0){
return(c(0))
}
colnames(asd)= c("correlation")
return(asd)
}
cr=corr("specdata",5000)
cr
summary(cr)
cr=corr("specdata",50)
summary(cr)
sapply(Data,class)
class(ak)
sapply(ak, class)
class(ailo)
sapply(ailo, class)
class(asd)
sapply(asd, class)
corr <- function(directory, threshold=0) {
id = 1:332
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
ak$id = as.numeric(ak$id)
colnames(ak)=(c("id","nobs"))
asd<-data.frame()
kk=(split(a,a$ID))
for(i in 1:nrow(ak)){
ailo=data.frame(kk[i])
if((ak[i,2])>threshold ){
y = cor(ailo[,c(2,3)])
asd=rbind(asd,y[2])
}
}
a=nrow(asd)
if(a==0){
return(c(0))
}
colnames(asd)= c("correlation")
return(asd)
}
cr=corr("specdata",50)
corr <- function(directory, threshold=0,id=1:332) {
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
ak$id = as.numeric(ak$id)
colnames(ak)=(c("id","nobs"))
asd<-data.frame()
kk=(split(a,a$ID))
for(i in 1:nrow(ak)){
ailo=data.frame(kk[i])
if((ak[i,2])>threshold ){
y = cor(ailo[,c(2,3)])
asd=rbind(asd,y[2])
}
}
a=nrow(asd)
if(a==0){
return(c(0))
}
colnames(asd)= c("correlation")
return(asd)
}
cr=corr("specdata",50,1)
cr
asd<-data.frame()
cr=corr("specdata",50,1)
cr
cr<-0
cr=corr("specdata",50,1)
cr
corr <- function(directory, threshold=0,id=1:332) {
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
colnames(ak)=(c("id","nobs"))
asd<-data.frame()
kk=(split(a,a$ID))
for(i in 1:nrow(ak)){
ailo=data.frame(kk[i])
if((ak[i,2])>threshold ){
y = cor(ailo[,c(2,3)])
asd=rbind(asd,y[2])
}
}
a=nrow(asd)
if(a==0){
return(c(0))
}
colnames(asd)= c("correlation")
return(asd)
}
cr=corr("specdata",50,1)
cr
cr=corr("specdata",50,2)
cr
ak<-data.frame(table(a$ID))
colnames(ak)=(c("id","nobs"))
asd<-data.frame()
kk=(split(a,a$ID))
for(i in 1:nrow(ak)){
ailo=data.frame(kk[i])
if((ak[i,2])>threshold ){
y = cor(ailo[,c(2,3)])
asd=rbind(asd,y[2])
}
}
for(i in 1:nrow(ak)){
ailo=data.frame(kk[i])
if((ak[i,2])>100 ){
y = cor(ailo[,c(2,3)])
asd=rbind(asd,y[2])
}}
asd
a=nrow(asd)
if(a==0){
return(c(0))
}
colnames(asd)= c("correlation")
return(asd)
a=nrow(asd)
if(a==0){asd=c(0)}asd
a=nrow(asd)
if(a==0){asd=c(0)}
asd
cr=corr("specdata",50)
cr
install.packages("foreach")
install.packages("domc")
install.packages("DoMC")
library(foreach)
install.packages("doMPI")
head(a)
pollutantmean <- function(directory,pollutant, id=1:332 ) {
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
mean(Data[,pollutant],na.rm=TRUE)
}
head(Data)
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmatrix <- function(matrix) m <<- matrix
getmatrix <- function() m
list(set = set, get = get,
setmatrix = setmatrix,
getmatrix = getmatrix)
}
cacheSolve<- function(x, ...) {
m <- x$getmatrix()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setmatrix(m)
m
}
d<-matrix(1:9,byrow =3)
d
d<-matrix(1:9,row =3)
?"matrix"
d<-matrix(1:9,nrow =3)
d
makeCacheMatrix(d)
cacheSolve(d)
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmatrix <- function(matrix) m <<- matrix
getmatrix <- function() m
list(set = set, get = get,
setmatrix = setmatrix,
getmatrix = getmatrix)
}
cacheSolve<- function(x, ...) {
m <- x$getmatrix()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
mat.data <- x$get()
m <- solve(mat.data, ...)
x$setmatrix(m)
m
}
d<-matrix(1:90000,nrow =300)
d
makeCacheMatrix(d)
cacheSolve(d)
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinverse <- function(inverse) inv <<- inverse
getinverse <- function() inv
list(set=set, get=get, setinverse=setinverse, getinverse=getinverse)
}
cacheSolve <- function(x, ...) {
inv <- x$getinverse()
if(!is.null(inv)) {
message("getting cached data.")
return(inv)
}
data <- x$get()
inv <- solve(data)
x$setinverse(inv)
inv
}
makeCacheMatrix(d)
cacheSolve(d)
d$get()
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmatrix <- function(matrix) m <<- matrix
getmatrix <- function() m
list(set = set, get = get,
setmatrix = setmatrix,
getmatrix = getmatrix)
}
cacheSolve<- function(x, ...) {
m <- x$getmatrix()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
mat.data <- x$get()
m <- solve(mat.data)
x$setmatrix(m)
m
}
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve(d)
x = matrix(1:90000,nrow =300)
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
x = matrix(1:900,nrow =30)
m = makeCacheMatrix(x)
m$get()
head(m)
cacheSolve(m)
x = matrix(1:9,nrow =3)
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
x = matrix(c(1,5,32,0,0,2,5,9,1),nrow =3)
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
setwd("~/r_folder/rprog-data-ProgAssignment3-data")
outcomes<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
head(outcomes)
outcomes[, 11] <- as.numeric(outcome[, 11])
hist(outcomes[,11])
outcomes<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
outcomes[, 11] <- as.numeric(outcomes[, 11])
hist(outcomes[,11])
View(outcomes)
sapply(outcomes,names)
a<-sapply(outcomes,names)
a
a<-data.frame()
a<-sapply(outcomes,names)
a
?grep
head(grep)
head(outcomes)
sum(na.omit(outcomes))
save.image("~/r_folder/rprog-data-ProgAssignment3-data/qwer.RData")
