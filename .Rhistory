a=nrow(asd)
if(a==0){
return(c(0))
}
colnames(asd)= c("correlation")
return(asd)
}
submit()
id = 1:332
corr <- function(directory, threshold=0) {
id = 1:332
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
colnames(ak)=(c("id","nobs"))
asd<-data.frame()
kk=(split(a,a$ID))
for(i in 1:nrow(ak)){
ailo=data.frame(kk[i])
if((ak[i,2])>threshold ){
y = cor(ailo[,c(2,3)])
asd=rbind(asd,y[2])
}
}
a=nrow(asd)
if(a==0){
return(c(0))
}
colnames(asd)= c("correlation")
return(asd)
}
submit()
corr <- function(directory, threshold=0) {
id = 1:332
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,fileList)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
colnames(ak)=(c("id","nobs"))
asd<-data.frame()
kk=(split(a,a$ID))
for(i in 1:nrow(ak)){
ailo=data.frame(kk[i])
if((ak[i,2])>threshold ){
y = cor(ailo[,c(2,3)])
asd=rbind(asd,y[2])
}
}
a=nrow(asd)
if(a==0){
return(c(0))
}
colnames(asd)= c("correlation")
return(asd)
}
corr("specdata",0)
Data = lapply(file.path(path,fileList),read.csv)
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,fileList)]
#import data
Data = lapply(file.path(path,fileList),read.csv)
source("corr.R")
corr("specdata",0)
submit()
corr("specdata",59000)
corr("specdata")
corr <- function(directory, threshold=0) {
id = 1:332
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,fileList)]
#import data
Data = lapply(file.path(path,fileList),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
colnames(ak)=(c("id","nobs"))
asd<-c()
kk=(split(a,a$ID))
for(i in 1:nrow(ak)){
ailo=data.frame(kk[i])
if((ak[i,2])>threshold ){
y = cor(ailo[,c(2,3)])
asd=cbind(asd,y[2])
}
}
a=sum(asd)
if(a==0){
return(c(0))
}
colnames(asd)= c("correlation")
return(asd)
}
corr("specdata",88888)
submit()
corr <- function(directory, threshold=0) {
id = 1:332
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,fileList)]
#import data
Data = lapply(file.path(path,fileList),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
colnames(ak)=(c("id","nobs"))
asd<-c()
kk=(split(a,a$ID))
for(i in 1:nrow(ak)){
ailo=data.frame(kk[i])
if((ak[i,2])>threshold ){
y = cor(ailo[,c(2,3)])
asd=cbind(asd,y[2])
}
}
a=sum(asd)
if(a==0){
return(c(0))
}
return(asd)
}
source("corr.R")
submit()
submit()
submit()
complete <- function(directory, id =1:332) {
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(split(a,a$ID))
colnames(ak)<-(c("id","nobs"))
return(ak)
}
source("complete.R")
complete("specdata")
?ifelse
complete <- function(directory, id =1:332) {
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
colnames(ak)<-(c("id","nobs"))
for(i in 1:332){
ifelse(i==ak$id,ak[i,]=ak$id,0)
}
return(ak)
}
complete <- function(directory, id =1:332) {
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
colnames(ak)<-(c("id","nobs"))
for(i in 1:332){
ifelse(i==ak$id,ak$id,0)
}
return(ak)
}
complete("specdata")
complete <- function(directory, id =1:332) {
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
colnames(ak)<-(c("id","nobs"))
for(i in 1:332){
ifelse(i==ak[i,],ak$id,0)
}
return(ak)
}
complete("specdata")
complete <- function(directory, id =1:332) {
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
colnames(ak)<-(c("id","nobs"))
for(i in 1:332){
ifelse(ak[i,]==i,ak[i,],0)
}
return(ak)
}
complete("specdata")
complete <- function(directory, id =1:332) {
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame(table(a$ID))
colnames(ak)<-(c("id","nobs"))
for(i in 1:332){
ifelse(ak[i,1]==i,ak[i,],0)
}
return(ak)
}
complete("specdata")
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
path = paste(getwd(),"specdata",sep = "/")
id = 1:332
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
head(a)
table(nrow(a$id))
nrow(a$id)
for(i in 1:332)nrow(a$id==i)
q<-for(i in 1:332)nrow(a$id==i)
q
split()
split(a,a$id)
?split
x$id <- as.numeric(as.character(x$id))
a$id <- as.numeric(as.character(a$id))
a$id <- (as.character(a$id))
ak<-data.frame()
colnames(ak)<-(c("id","nobs"))
ak<-data.frame(table(a$ID))
colnames(ak)<-(c("id","nobs"))
a$id <- as.numeric(as.character(a$id))
ak$id <- as.numeric(as.character(ak$id))
freq <- rep(0, 332)
freq[ak$id] <- ak$Freq
freq[ak$id] <- ak$nobs
freqdf <- as.data.frame(cbind(var = 1:332, freq))
complete <- function(directory, id =1:332) {
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame()
ak<-data.frame(table(a$ID))
colnames(ak)<-(c("id","nobs"))
ak$id <- as.numeric(as.character(ak$id))
freq <- rep(0, 332)
freq[ak$id] <- ak$Freq
freq[ak$id] <- ak$nobs
freqdf <- as.data.frame(cbind(var = 1:332, freq))
return(freqdf)
}
complete("specdata")
complete <- function(directory, id =1:332) {
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame()
ak<-data.frame(table(a$ID))
colnames(ak)<-(c("id","nobs"))
ak$id <- as.numeric(as.character(ak$id))
freq <- rep(0, 332)
freq[ak$id] <- ak$nobs
freqdf <- as.data.frame(cbind(var = 1:332, freq))
return(freqdf)
}
complete("specdata")
submit()
source("complete.R")
submit()
complete <- function(directory, id =1:332) {
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame()
ak<-data.frame(table(a$ID))
colnames(ak)<-(c("id","nobs"))
ak$id <- as.numeric(as.character(ak$id))
freq <- rep(NA, 332)
freq[ak$id] <- ak$nobs
freqdf <- as.data.frame(cbind(var = 1:332, freq))
return(freqdf)
}
source("complete.R")
complete <- function(directory, id =1:332) {
#set the path
path = paste(getwd(),directory,sep = "/")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
Data = rbind.data.frame(Data,id)
a<-data.frame(subset(Data,complete.cases(Data)==TRUE))
ak<-data.frame()
ak<-data.frame(table(a$ID))
colnames(ak)<-(c("id","nobs"))
ak$id <- as.numeric(as.character(ak$id))
freq <- rep(NA, 332)
freq[ak$id] <- ak$nobs
freqdf <- as.data.frame(cbind(var = 1:332, freq))
return(freqdf)
}
submit()
complete2 <- function(directory, id = 1:332) {
+  files <- list.files(directory, full.names = TRUE);
+  completeCases <- data.frame();
+
+  for (index in id) {
+    data <- read.csv(files[index], comment.char = "");
+    c <- complete.cases(data);
+    naRm <- data[c, ];
+    completeCases <- rbind(completeCases, c(index, nrow(naRm)));
+  }
+
+  names(completeCases) <- c("id", "nobs");
+  completeCases;
+}
complete2 <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE);
completeCases <- data.frame();
for (index in id) {
data <- read.csv(files[index], comment.char = "");
c <- complete.cases(data);
naRm <- data[c, ];
completeCases <- rbind(completeCases, c(index, nrow(naRm)));
}
names(completeCases) <- c("id", "nobs");
completeCases;
}
complete2("specdata")
source("complete.R")
submit()
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
source("complete.R")
completeCases <- complete(directory)
casesAboveThreshold <- completeCases[completeCases$nobs > threshold,1]
allFiles <- list.files(path = directory, full.names = TRUE)
correlations <- rep(NA,length(casesAboveThreshold))
for (i in casesAboveThreshold) {
fileData <- (read.csv(allFiles[i]))
completeCases <- complete.cases(fileData)
validSulfateData <- fileData[completeCases, 2]
validNitrateData <- fileData[completeCases, 3]
correlations[i] <- cor(x = validSulfateData, y = validNitrateData)
#print(head(fileData[completeCases,]))
#print(validSulfateData)
#print(validNitrateData)
}
correlations <- correlations[complete.cases(correlations)]
}
submit()
save.image("~/r_folder/anything.RData")
